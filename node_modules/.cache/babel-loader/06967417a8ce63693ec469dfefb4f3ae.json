{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\RequestReact\\\\requestreact\\\\src\\\\components\\\\List.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\nimport \"./style/style.css\";\nimport { Layout } from 'antd';\nimport booksShelfs from './style/picture/booksShelfs.png';\nconst {\n  Header,\n  Footer\n} = Layout;\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showForm: true,\n      formValue: \"\"\n    };\n\n    this.inputChange = event => {\n      this.setState({\n        formValue: event.target.value\n      });\n    };\n\n    this.formSubmit = event => {\n      const {\n        formValue\n      } = this.state;\n      const {\n        addToDo\n      } = this.props;\n      event.preventDefault();\n      addToDo({\n        title: formValue\n      });\n      this.setState({\n        formValue: \"\"\n      });\n    };\n\n    this.renderForm = () => {\n      const {\n        showForm,\n        formValue\n      } = this.state;\n\n      if (showForm) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"todo-add-form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.formSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-field\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          value: formValue,\n          onChange: this.inputChange,\n          id: \"toDoNext\",\n          type: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"toDoNext\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }\n        }, \"add new book's task for me to read\"))), /*#__PURE__*/React.createElement(\"span\", {\n          onClick: this.formSubmit,\n          className: \"btn-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"text-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, \"add\")));\n      }\n    };\n  }\n\n  renderToDo() {\n    const {\n      data\n    } = this.props;\n\n    const toDos = _.map(data, (value, key) => {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: key,\n        todoId: key,\n        todo: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }\n      });\n    });\n\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s10 offset-s1 center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"You have no more book's tasks to read!\"));\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const {\n      showForm\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: booksShelfs,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \" made by React and me  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 80\n      }\n    }), \" avdeevaelena5@gmail.com  \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"to-do-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, this.renderForm(), this.renderToDo()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-action-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        showForm: !showForm\n      }),\n      className: \"btn-floating btn-large orange darken-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, showForm ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"-\") : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(Footer, {\n      className: \"footer-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \" made by React and me\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \" avdeevaelena5@gmail.com  \"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  data\n}) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(List);","map":{"version":3,"sources":["C:/Users/User/RequestReact/requestreact/src/components/List.jsx"],"names":["React","Component","connect","_","actions","ListItem","Layout","booksShelfs","Header","Footer","List","state","showForm","formValue","inputChange","event","setState","target","value","formSubmit","addToDo","props","preventDefault","title","renderForm","renderToDo","data","toDos","map","key","isEmpty","componentWillMount","fetchToDos","render","textAlign","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBH,MAA3B;;AAEA,MAAMI,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BU,KAD2B,GACnB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADmB;;AAAA,SAM3BC,WAN2B,GAMbC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KAR0B;;AAAA,SAU3BC,UAV2B,GAUdJ,KAAK,IAAI;AACpB,YAAM;AAACF,QAAAA;AAAD,UAAc,KAAKF,KAAzB;AACA,YAAM;AAACS,QAAAA;AAAD,UAAY,KAAKC,KAAvB;AAEAN,MAAAA,KAAK,CAACO,cAAN;AACAF,MAAAA,OAAO,CAAC;AAACG,QAAAA,KAAK,EAAEV;AAAR,OAAD,CAAP;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAjB0B;;AAAA,SAmB3BW,UAnB2B,GAmBd,MAAM;AACjB,YAAM;AAACZ,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAwB,KAAKF,KAAnC;;AACA,UAAIC,QAAJ,EAAc;AACZ,4BACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,QAAQ,EAAE,KAAKO,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACV;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACc;AACE,UAAA,KAAK,EAAEN,SADT;AAEE,UAAA,QAAQ,EAAE,KAAKC,WAFjB;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd,eAOc;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAPd,CADU,CADF,eAYE;AACA,UAAA,OAAO,EAAE,KAAKK,UADd;AAEA,UAAA,SAAS,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAZF,CADF;AAuBD;AACF,KA9C0B;AAAA;;AA+C3BM,EAAAA,UAAU,GAAG;AACX,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKL,KAApB;;AACA,UAAMM,KAAK,GAAGxB,CAAC,CAACyB,GAAF,CAAMF,IAAN,EAAY,CAACR,KAAD,EAAQW,GAAR,KAAgB;AACxC,0BAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,GAAf;AAAoB,QAAA,MAAM,EAAEA,GAA5B;AAAiC,QAAA,IAAI,EAAEX,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFa,CAAd;;AAGA,QAAI,CAACf,CAAC,CAAC2B,OAAF,CAAUH,KAAV,CAAL,EAAuB;AACrB,aAAOA,KAAP;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CADF;AAKD;;AACDI,EAAAA,kBAAkB,GAAG;AACnB,SAAKV,KAAL,CAAWW,UAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACrB,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,GAAG,EAAEJ,WAAX;AAAwB,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE;AAAb,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGW;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D,+BAHX,CADH,eAOA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,UAAL,EADH,EAEG,KAAKC,UAAL,EAFH,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKT,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAE,CAACA;AAAZ,OAAd,CADjB;AAEE,MAAA,SAAS,EAAC,wCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAICA,QAAQ,gBACP;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADO,gBAGP;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF,CALF,eAiBE,oBAAC,MAAD;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADZ,CAjBF,CAPA,CAFF;AAkCD;;AApG0B;;AAuG7B,MAAMuB,eAAe,GAAG,CAAC;AAACT,EAAAA;AAAD,CAAD,KAAY;AAClC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CAACiC,eAAD,EAAkB/B,OAAlB,CAAP,CAAkCM,IAAlC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport * as actions from '../actions';\r\nimport ListItem from './ListItem';\r\nimport \"./style/style.css\";\r\nimport { Layout } from 'antd';\r\nimport booksShelfs from './style/picture/booksShelfs.png'; \r\nconst { Header, Footer } = Layout;\r\n\r\nclass List extends Component {\r\n  state = {\r\n    showForm: true,\r\n    formValue: \"\"\r\n  };\r\n\r\n  inputChange = event => {\r\n    this.setState({formValue: event.target.value});\r\n  };\r\n\r\n  formSubmit = event => {\r\n    const {formValue} = this.state;\r\n    const {addToDo} = this.props;\r\n   \r\n    event.preventDefault();\r\n    addToDo({title: formValue});\r\n    this.setState({formValue: \"\"});\r\n  };\r\n\r\n  renderForm = () => {\r\n    const {showForm, formValue} = this.state;\r\n    if (showForm) {\r\n      return (\r\n        <div id=\"todo-add-form\" >\r\n          <form onSubmit={this.formSubmit}>\r\n<div className=\"input-field\">\r\n              <input \r\n                value={formValue}\r\n                onChange={this.inputChange}\r\n                id=\"toDoNext\"\r\n                type=\"text\"\r\n              />\r\n              <label htmlFor=\"toDoNext\">add new book's task for me to read</label>\r\n            </div>\r\n          </form>\r\n          <span \r\n          onClick={this.formSubmit}\r\n          className=\"btn-item\"\r\n        >\r\n            <i className=\"text-item\">add</i>\r\n          </span>\r\n\r\n\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  renderToDo() {\r\n    const {data} = this.props;\r\n    const toDos = _.map(data, (value, key) => {\r\n      return <ListItem key={key} todoId={key} todo={value} />;\r\n    });\r\n    if (!_.isEmpty(toDos)) {\r\n      return toDos;\r\n    }\r\n    return (\r\n      <div className=\"col s10 offset-s1 center-align\">\r\n        <h4>You have no more book's tasks to read!</h4>\r\n      </div>\r\n    );\r\n  }\r\n  componentWillMount() {\r\n    this.props.fetchToDos();\r\n  }\r\n  render() {\r\n    const {showForm} = this.state;\r\n    return (\r\n\r\n      <div>\r\n         <Header > \r\n         <img  src={booksShelfs} style={{ textAlign: \"center\"}} />\r\n         \r\n                    <p   style={{ textAlign: \"center\"}}> made by React and me  <br /> avdeevaelena5@gmail.com  </p> \r\n         \r\n         </Header>   \r\n      <div className=\"to-do-list-container\">\r\n        <div className=\"row\">\r\n          {this.renderForm()}\r\n          {this.renderToDo()}\r\n        </div>\r\n        <div className=\"fixed-action-btn\">\r\n          <button \r\n            onClick={() => this.setState({showForm: !showForm})}\r\n            className=\"btn-floating btn-large orange darken-4\"\r\n          >\r\n          {showForm ? (\r\n            <i className=\"large material-icons\">-</i>\r\n          ) : (\r\n            <i className=\"large material-icons\">+</i>\r\n          )}\r\n          </button>\r\n        </div>   \r\n        <Footer  className=\"footer-item\"> made by React and me\r\n                    <p> avdeevaelena5@gmail.com  </p> \r\n        </Footer>\r\n\r\n      </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({data}) => {\r\n  return {\r\n    data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(List);"]},"metadata":{},"sourceType":"module"}