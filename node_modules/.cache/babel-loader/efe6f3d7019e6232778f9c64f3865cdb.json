{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\User\\\\RequestReact\\\\requestreact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\User\\\\RequestReact\\\\requestreact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{connectRef}from'../config/firebase';import{FETCH_ALL}from'./types';export var addToDo=function addToDo(newToDo){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connectRef.push().set(newToDo);case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var completeToDo=function completeToDo(completeToDoId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:connectRef.child(completeToDoId).remove();case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var fetchToDos=function fetchToDos(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:connectRef.on(\"value\",function(snapshot){dispatch({type:FETCH_ALL,payload:snapshot.val()});});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/User/RequestReact/requestreact/src/actions/index.jsx"],"names":["connectRef","FETCH_ALL","addToDo","newToDo","dispatch","push","set","completeToDo","completeToDoId","child","remove","fetchToDos","on","snapshot","type","payload","val"],"mappings":"2UAAA,OAAQA,UAAR,KAAyB,oBAAzB,CACA,OAAQC,SAAR,KAAwB,SAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,OAAO,iGAAI,iBAAMC,QAAN,kHAC9BJ,UAAU,CAACK,IAAX,GAAkBC,GAAlB,CAAsBH,OAAtB,EAD8B,sDAAJ,gEAAvB,CAMP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,cAAc,kGAAI,kBAAMJ,QAAN,sHAC5CJ,UAAU,CAACS,KAAX,CAAiBD,cAAjB,EAAiCE,MAAjC,GAD4C,wDAAJ,kEAAnC,CAIP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mGAAM,kBAAMP,QAAN,sHAC5BJ,UAAU,CAACY,EAAX,CAAc,OAAd,CAAuB,SAAAC,QAAQ,CAAI,CACnCT,QAAQ,CAAC,CACPU,IAAI,CAAEb,SADC,CAEPc,OAAO,CAAEF,QAAQ,CAACG,GAAT,EAFF,CAAD,CAAR,CAID,CALC,EAD4B,wDAAN,kEAAnB","sourcesContent":["import {connectRef} from '../config/firebase';\r\nimport {FETCH_ALL} from './types';\r\n\r\nexport const addToDo = newToDo => async dispatch => {\r\n    connectRef.push().set(newToDo);\r\n};\r\n\r\n\r\n\r\nexport const completeToDo = completeToDoId => async dispatch => {\r\n  connectRef.child(completeToDoId).remove();\r\n};\r\n\r\nexport const fetchToDos = () => async dispatch => {\r\n    connectRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: FETCH_ALL,\r\n      payload: snapshot.val()\r\n    });\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}